import { Injectable } from '@nestjs/common';

@Injectable()
export class UsersService {
    private users = [
        {
            "id": 1,
            "name": "Reynald",
            "email": "reynald@yahoo.com",
            "role": "ADMIN"
        },
        {
            "id": 2,
            "name": "Jigoro",
            "email": "jigoro@live.com",
            "role": "USER"            
        },
        {
            "id": 3,
            "name": "Soji",
            "email": "soji@gmail.com",
            "role": "SUPERVISOR"
        }
    ]

    findAll(role?: 'USER' | 'SUPERVISOR' | 'ADMIN') {
        if (role) {
            return this.users.filter(user => user.role === role)
        }
        return this.users
    }    

    findOne(id: number) {
        const user = this.users.find(user => user.id === id)
        return user
    }    

    createUser(user: {name: string, email: string, role: 'USER' | 'SUPERVISOR' | 'ADMIN'}) {
        const maxId = [...this.users].sort((a,b) => b.id - a.id)
        const newUser = {
            id: maxId[0].id + 1,
            ...user
        }
        this.users.push(newUser)
        return newUser
    }    


    updateUser(id: number, updatedUser: { name?: string , email?: string, role?:  'USER' | 'SUPERVISOR' | 'ADMIN'}) {
       this.users = this.users.map(user => {
        if (user.id === id) {
            return { ...user, ...updatedUser}
        }
        return user
       } )
       return this.findOne(id)
    }

    deleteUser(id: number) {
        const removedUser = this.findOne(id)
        this.users = this.users.filter(user => user.id !== id)        
        return removedUser
    }    
}
